{"version":3,"sources":["logo.svg","components/Coin.jsx","components/CoinList.jsx","components/BalanceAccount.jsx","components/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["Td","styled","td","Coin","name","ticker","price","balance","handleRefresh","COIN_URL","e","a","preventDefault","axios","get","coinData","parseFloat","Number","data","quotes","toFixed","onClick","Table","table","TableHeader","tr","TableHeaderTd","CoinList","coinInfoArr","showBalance","map","Section","section","BalanceAccount","amount","handleUpdateShowBalance","HeaderStyle","header","AppTitleStyle","h1","AppLogoStyle","img","Header","logo","title","className","src","alt","prototype","PropTypes","string","App","useState","Balance","CoinsInfo","setCoinsInfo","ShowBalance","setShowBalance","response","coinIds","slice","id","promises","key","Promise","all","coins","console","log","useEffect","length","retrieveCoinData","params","find","index","_CoinsInfo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAAe,G,MAAA,IAA0B,kC,qCCKnCA,EAAKC,IAAOC,GAAV,uFAMO,SAASC,EAAT,GAOX,IANFC,EAMC,EANDA,KACAC,EAKC,EALDA,OACAC,EAIC,EAJDA,MACAC,EAGC,EAHDA,QACAC,EAEC,EAFDA,cACAC,EACC,EADDA,SACC,4CACD,WAA8BC,GAA9B,eAAAC,EAAA,6DACED,EAAEE,iBADJ,SAEyBC,IAAMC,IAAIL,EAAWJ,GAF9C,OAEQU,EAFR,OAGEP,EAAc,CACZH,SACAC,MAAOU,WAAWC,OAAOF,EAASG,KAAKC,OAAd,IAA4Bb,OAAOc,QAAQ,MALxE,4CADC,sBASD,OACE,+BACE,cAACpB,EAAD,UAAKI,IACL,cAACJ,EAAD,UAAKK,IACL,eAACL,EAAD,gBAAOM,OACJC,EAAU,IAAM,cAACP,EAAD,UAAKO,IACxB,cAACP,EAAD,UACE,wBAAQqB,QAhBb,4CAgBK,0BC9BR,I,EAAMC,EAAQrB,IAAOsB,MAAV,sIAOLC,EAAcvB,IAAOwB,GAAV,2PAaXC,EAAgBzB,IAAOC,GAAV,4CAIJ,SAASyB,EAAT,GAKX,IAJFC,EAIC,EAJDA,YACApB,EAGC,EAHDA,cACAqB,EAEC,EAFDA,YACApB,EACC,EADDA,SAEA,OACE,mCACE,eAACa,EAAD,WACE,gCACE,eAACE,EAAD,WACE,cAACE,EAAD,mBACA,cAACA,EAAD,qBACA,cAACA,EAAD,oBACCG,GAAe,cAACH,EAAD,sBAChB,cAACA,EAAD,SAGJ,gCACGE,EAAYE,KAAI,YAAuC,IAApC1B,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACvC,OACE,cAACJ,EAAD,CAEEC,KAAMA,EACNC,OAAQA,EACRC,MAAOA,EACPC,QAASsB,EAActB,GAAW,EAClCC,cAAeA,EACfC,SAAUA,GANLJ,aC9CrB,IAAM0B,EAAU9B,IAAO+B,QAAV,uHAOE,SAASC,EAAT,GAIX,IAHFC,EAGC,EAHDA,OACAL,EAEC,EAFDA,YACAM,EACC,EADDA,wBAOA,OACE,eAACJ,EAAD,yBACcF,EAAcK,EAAS,aACnC,wBAAQb,QARZ,SAAwBX,GACtBA,EAAEE,iBAEFuB,GADgBN,IAMd,SAAkCA,EAAc,OAAS,Y,2BCnBzDO,EAAcnC,IAAOoC,OAAV,yMASXC,EAAgBrC,IAAOsC,GAAV,+EAIbC,EAAevC,IAAOwC,IAAV,+FAOH,SAASC,EAAT,GAA4C,IAA1BC,EAAyB,EAAzBA,KAAyB,IAAnBC,aAAmB,MAAX,QAAW,EACxD,OACE,mCACE,eAACR,EAAD,CAAaS,UAAU,aAAvB,UACW,MAARF,GACC,cAACH,EAAD,CAAcM,IAAKH,EAAMI,IAAI,aAAaF,UAAU,aAEtD,cAACP,EAAD,CAAeO,UAAU,YAAzB,SAAsCD,SAK9CF,EAAOM,UAAY,CACjBJ,MAAOK,IAAUC,QC9BnB,IACMzC,EAAW,0CAmEF0C,MAjEf,WAEE,MAA8BC,mBAAS,MAAvC,mBAAOC,EAAP,KACA,GADA,KACkCD,mBAAS,KAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAAsCH,oBAAS,GAA/C,mBAAOI,EAAP,KAAoBC,EAApB,KAJa,4CAiBb,oCAAA9C,EAAA,sEACuBE,IAAMC,IAAI,wCADjC,cACM4C,EADN,OAEMC,EAAUD,EAASxC,KAAK0C,MAAM,EAtBnB,GAsBkC9B,KAAI,SAACpB,GAAD,OAAOA,EAAEmD,MAExDC,EAAWH,EAAQ7B,KAAI,SAACiC,GAAD,OAASlD,IAAMC,IAAIL,EAAWsD,MAJ7D,SAKsBC,QAAQC,IAAIH,GALlC,OAKQI,EALR,OAMQnD,EAAWmD,EAAMpC,KAAI,SAACpB,GAC1B,IAAMQ,EAAOR,EAAEQ,KACf,MAAO,CACLd,KAAMc,EAAKd,KACXC,OAAQa,EAAK2C,GACbvD,MAAOU,WAAWC,OAAOC,EAAKC,OAAL,IAAmBb,OAAOc,QAAQ,IAC3Db,QAAS,MAIb4D,QAAQC,IAAIrD,GACZwC,EAAaxC,GAjBf,6CAjBa,sBA6Cb,OARAsD,qBAAU,WACiB,IAArBf,EAAUgB,QAtCH,mCAuCTC,MAOF,sBAAK1B,UAAU,MAAf,UACE,cAACH,EAAD,CAAQC,KAAMA,EAAMC,MAAM,kBAC1B,sBAAKC,UAAU,WAAf,UACE,cAACZ,EAAD,CACEC,OAAQmB,EACRxB,YAAa2B,EACbrB,wBAAyBsB,IAE3B,cAAC9B,EAAD,CACEC,YAAa0B,EACb9C,cAjDR,SAAuBgE,GACrBlB,EAAUmB,MAAK,WAAaC,GAAW,IAArBrE,EAAoB,EAApBA,OAChB,GAAImE,EAAOnE,SAAWA,EAAQ,CAC5B,IAAIsE,EAAU,YAAOrB,GACrBqB,EAAWD,GAAOpE,MAAQkE,EAAOlE,MACjCiD,EAAaoB,QA6CX9C,YAAa2B,EACb/C,SAAUA,WCzDLmE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ca811976.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"axios\";\r\n\r\nconst Td = styled.td`\r\n  border: 1px solid #fff;\r\n  color: #fff;\r\n  width: 25vh;\r\n`;\r\n\r\nexport default function Coin({\r\n  name,\r\n  ticker,\r\n  price,\r\n  balance,\r\n  handleRefresh,\r\n  COIN_URL,\r\n}) {\r\n  async function onClickHandler(e) {\r\n    e.preventDefault();\r\n    const coinData = await axios.get(COIN_URL + ticker);\r\n    handleRefresh({\r\n      ticker,\r\n      price: parseFloat(Number(coinData.data.quotes[\"USD\"].price).toFixed(2)),\r\n    });\r\n  }\r\n  return (\r\n    <tr>\r\n      <Td>{name}</Td>\r\n      <Td>{ticker}</Td>\r\n      <Td>$ {price}</Td>\r\n      {!(balance < 0) && <Td>{balance}</Td>}\r\n      <Td>\r\n        <button onClick={onClickHandler}>Refresh</button>\r\n      </Td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nCoin.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  ticker: PropTypes.string,\r\n  price: PropTypes.number.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport Coin from \"./Coin\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Table = styled.table`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  margin: 20px;\r\n  width: auto;\r\n`;\r\nconst TableHeader = styled.tr`\r\n  position: relative;\r\n  text-align: center;\r\n  left: 50%;\r\n  transform: translate(-50%);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-self: center;\r\n  color: white;\r\n  font-weight: bold;\r\n  font-size: 1.125rem;\r\n`;\r\n\r\nconst TableHeaderTd = styled.td`\r\n  width: 25vh;\r\n`;\r\n\r\nexport default function CoinList({\r\n  coinInfoArr,\r\n  handleRefresh,\r\n  showBalance,\r\n  COIN_URL,\r\n}) {\r\n  return (\r\n    <>\r\n      <Table>\r\n        <thead>\r\n          <TableHeader>\r\n            <TableHeaderTd>Name</TableHeaderTd>\r\n            <TableHeaderTd>Ticker</TableHeaderTd>\r\n            <TableHeaderTd>Price</TableHeaderTd>\r\n            {showBalance && <TableHeaderTd>Balance</TableHeaderTd>}\r\n            <TableHeaderTd></TableHeaderTd>\r\n          </TableHeader>\r\n        </thead>\r\n        <tbody>\r\n          {coinInfoArr.map(({ name, ticker, price, balance }) => {\r\n            return (\r\n              <Coin\r\n                key={ticker}\r\n                name={name}\r\n                ticker={ticker}\r\n                price={price}\r\n                balance={showBalance ? balance : -1}\r\n                handleRefresh={handleRefresh}\r\n                COIN_URL={COIN_URL}\r\n              />\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Section = styled.section`\r\n  font-size: 2rem;\r\n  text-align: left;\r\n  padding: 1.5rem 0 1.5rem 3rem;\r\n  color: #fff;\r\n`;\r\n\r\nexport default function BalanceAccount({\r\n  amount,\r\n  showBalance,\r\n  handleUpdateShowBalance,\r\n}) {\r\n  function onClickHandler(e) {\r\n    e.preventDefault();\r\n    const newVal = !showBalance;\r\n    handleUpdateShowBalance(newVal);\r\n  }\r\n  return (\r\n    <Section>\r\n      Balance: $ {showBalance ? amount : \"xxxxxxxxxx\"}\r\n      <button onClick={onClickHandler}>{showBalance ? \"hide\" : \"show\"}</button>\r\n    </Section>\r\n  );\r\n}\r\nBalanceAccount.propTypes = { amount: PropTypes.number.isRequired };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\n//#region Styles\r\nconst HeaderStyle = styled.header`\r\n  background-color: #282c34;\r\n  min-height: 20vh;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  align-self: stretch;\r\n`;\r\nconst AppTitleStyle = styled.h1`\r\n  font-size: calc(20px + 2vmin);\r\n  color: white;\r\n`;\r\nconst AppLogoStyle = styled.img`\r\n  height: 12vmin;\r\n  min-height: 11vmin;\r\n  pointer-events: none;\r\n`;\r\n//#endregion Styles\r\n\r\nexport default function Header({ logo, title = \"Title\" }) {\r\n  return (\r\n    <>\r\n      <HeaderStyle className=\"App-header\">\r\n        {logo != null && (\r\n          <AppLogoStyle src={logo} alt=\"React logo\" className=\"App-logo\" />\r\n        )}\r\n        <AppTitleStyle className=\"App-title\">{title}</AppTitleStyle>\r\n      </HeaderStyle>\r\n    </>\r\n  );\r\n}\r\nHeader.prototype = {\r\n  title: PropTypes.string,\r\n};\r\n","import \"./App.css\";\nimport logo from \"./logo.svg\";\nimport axios from \"axios\";\nimport CoinList from \"./components/CoinList\";\nimport BalanceAccount from \"./components/BalanceAccount\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\n\nconst COIN_COUNT = 5;\nconst COIN_URL = \"https://api.coinpaprika.com/v1/tickers/\";\n\nfunction App() {\n  //#region States\n  const [Balance, setBalance] = useState(15000);\n  const [CoinsInfo, setCoinsInfo] = useState([]);\n  const [ShowBalance, setShowBalance] = useState(false);\n  //#endregion States\n\n  function handleRefresh(params) {\n    CoinsInfo.find(({ ticker }, index) => {\n      if (params.ticker === ticker) {\n        let _CoinsInfo = [...CoinsInfo];\n        _CoinsInfo[index].price = params.price;\n        setCoinsInfo(_CoinsInfo);\n      }\n    });\n  }\n\n  async function retrieveCoinData() {\n    let response = await axios.get(\"https://api.coinpaprika.com/v1/coins\");\n    let coinIds = response.data.slice(0, COIN_COUNT).map((e) => e.id);\n    //https://api.coinpaprika.com/v1/tickers/${e.key}\n    const promises = coinIds.map((key) => axios.get(COIN_URL + key));\n    const coins = await Promise.all(promises);\n    const coinData = coins.map((e) => {\n      const data = e.data;\n      return {\n        name: data.name,\n        ticker: data.id,\n        price: parseFloat(Number(data.quotes[\"USD\"].price).toFixed(2)),\n        balance: 0,\n      };\n    });\n    //data.quote.USD.price\n    console.log(coinData);\n    setCoinsInfo(coinData);\n  }\n\n  useEffect(() => {\n    if (CoinsInfo.length === 0) {\n      retrieveCoinData();\n    } else {\n      //component did update\n    }\n  });\n\n  return (\n    <div className=\"App\">\n      <Header logo={logo} title=\"Coin Exchange\" />\n      <div className=\"app-body\">\n        <BalanceAccount\n          amount={Balance}\n          showBalance={ShowBalance}\n          handleUpdateShowBalance={setShowBalance}\n        />\n        <CoinList\n          coinInfoArr={CoinsInfo}\n          handleRefresh={handleRefresh}\n          showBalance={ShowBalance}\n          COIN_URL={COIN_URL}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}